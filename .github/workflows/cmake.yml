name: default

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.platform.name }} ${{ matrix.config.name }} ${{ matrix.linkage.name }}
    runs-on: ${{ matrix.platform.os }}

    strategy:
      fail-fast: false
      matrix:
        platform:
        - { name: Windows VS2019, os: windows-latest }
        - { name: Linux GCC,      os: ubuntu-latest  }
        - { name: Linux Clang,    os: ubuntu-latest, flags: -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ }
        - { name: MacOS,          os: macos-latest   }
        config:
        - { name: Debug, flags: -DCMAKE_BUILD_TYPE=Debug }
        - { name: Release, flags: -DCMAKE_BUILD_TYPE=Release }
        linkage:
        - { name: Shared, flags: -DBUILD_SHARED_LIBS=ON }
        - { name: Static, flags: -DBUILD_SHARED_LIBS=OFF }
        
    steps:
    - uses: actions/checkout@v4

    - name: Install linux Dependencies
      if: runner.os == 'Linux'
      run: sudo apt-get update && sudo apt-get install libgtk-3-dev libenet-dev libxrandr-dev libudev-dev libopenal-dev libflac-dev libvorbis-dev libopus-dev libsdl2-dev libunwind-dev libassimp-dev assimp-utils

    - name: Install macOS Dependencies
      if: runner.os == 'MacOS'
      run: brew update && brew install sdl2 assimp openal-soft opus bullet

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      run: cmake --preset default -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      shell: bash
      run: cmake --build --preset default --config $BUILD_TYPE --target install